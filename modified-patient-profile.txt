import React, { useState, useEffect } from "react";
import { Link } from "wouter";
import {
  Card,
  CardContent,
  CardHeader,
  CardTitle,
  CardFooter
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Switch } from "@/components/ui/switch";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogFooter,
} from "@/components/ui/dialog";
import { Label } from "@/components/ui/label";
import { Separator } from "@/components/ui/separator";
import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "@/components/ui/tabs";
import { Progress } from "@/components/ui/progress";

interface PatientData {
  name: string;
  lastName: string;
  age: number;
  phone: string;
  email: string;
  address: string;
  weight: number;
  height: number;
  isSmoker: boolean;
  insurance: string;
}

interface Medication {
  id: string;
  name: string;
  dosage: string;
  frequency: string;
  category: "diabetes" | "hipertension" | "otro";
  adherence: number;
  nextDose: string;
}

export default function PatientProfileNew() {
  // Sidebar state
  const [sidebarOpen, setSidebarOpen] = useState(true);
  
  // Handle sidebar toggle
  const toggleSidebar = () => {
    setSidebarOpen(!sidebarOpen);
  };
  
  // Set up event listeners for window resize
  useEffect(() => {
    const handleResize = () => {
      if (window.innerWidth < 768) {
        setSidebarOpen(false);
      } else {
        setSidebarOpen(true);
      }
    };
    
    // Call once on mount
    handleResize();
    
    // Add event listener
    window.addEventListener("resize", handleResize);
    
    // Clean up
    return () => {
      window.removeEventListener("resize", handleResize);
    };
  }, [sidebarOpen]);
  
  // Estados de diálogos
  const [showEditProfileDialog, setShowEditProfileDialog] = useState(false);
  const [showConfirmLogoutDialog, setShowConfirmLogoutDialog] = useState(false);
  const [showAddMedicationDialog, setShowAddMedicationDialog] = useState(false);
  
  // Estado del paciente
  const [patientData, setPatientData] = useState<PatientData>({
    name: "José",
    lastName: "Ponce Ávila",
    age: 56,
    phone: "(+52) 55 1234 5678",
    email: "joseponce@email.com",
    address: "Av. Insurgentes Sur 1582, CDMX",
    weight: 95,
    height: 175,
    isSmoker: false,
    insurance: "IMSS"
  });
  
  // Estado de medicamentos
  const [medications, setMedications] = useState<Medication[]>([
    {
      id: "1",
      name: "Metformina",
      dosage: "850mg - 1 pastilla después del desayuno y cena",
      frequency: "2 veces al día",
      category: "diabetes",
      adherence: 96,
      nextDose: "Hoy 20:00"
    },
    {
      id: "2",
      name: "Glibenclamida",
      dosage: "5mg - 1 pastilla antes del desayuno",
      frequency: "1 vez al día",
      category: "diabetes",
      adherence: 82,
      nextDose: "Mañana 7:30"
    },
    {
      id: "3",
      name: "Losartán",
      dosage: "50mg - 1 pastilla en la mañana",
      frequency: "1 vez al día",
      category: "hipertension",
      adherence: 100,
      nextDose: "Mañana 8:00"
    }
  ]);
  
  // Estado del formulario de nuevo medicamento
  const [newMedication, setNewMedication] = useState<Omit<Medication, "id" | "adherence">>({
    name: "",
    dosage: "",
    frequency: "",
    category: "diabetes",
    nextDose: ""
  });
  
  // Manejador para guardar cambios del perfil
  const handleProfileSave = () => {
    // Aquí iría la lógica para guardar los cambios del perfil en la base de datos
    setShowEditProfileDialog(false);
  };
  
  // Manejador para añadir medicamento
  const handleAddMedication = () => {
    const id = Math.random().toString(36).substring(2, 9);
    const medToAdd: Medication = {
      ...newMedication,
      id,
      adherence: 100
    };
    
    setMedications([...medications, medToAdd]);
    setShowAddMedicationDialog(false);
    
    // Resetear el formulario
    setNewMedication({
      name: "",
      dosage: "",
      frequency: "",
      category: "diabetes",
      nextDose: ""
    });
  };
  
  return (
    <div className="relative min-h-screen bg-[--white-soft]">
      <div className="flex">
        {/* Contenido principal */}
        <main className={`flex-1 p-4 md:p-6 ${sidebarOpen ? 'md:ml-[268px]' : 'md:ml-[80px]'} transition-all duration-300`}>
          {/* Encabezado de perfil */}
          <div className="mb-6 flex flex-col md:flex-row md:justify-between md:items-center gap-4">
            <div className="flex items-center gap-3">
              <div className="h-12 w-12 rounded-full bg-[--blue-light] flex items-center justify-center">
                <span className="text-lg font-bold text-[--blue-main]">{patientData.name[0]}{patientData.lastName[0]}</span>
              </div>
              <div>
                <h1 className="text-xl font-bold text-[--black-soft]">{patientData.name} {patientData.lastName}</h1>
                <p className="text-sm text-[--gray-medium]">{patientData.age} años · {patientData.insurance}</p>
              </div>
            </div>
            
            <div className="flex flex-wrap gap-3">
              <Button 
                variant="outline" 
                className="border-[--blue-main] text-[--blue-main] hover:bg-[--blue-light]/10"
                onClick={() => setShowEditProfileDialog(true)}
              >
                <svg className="mr-2 h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                  <path d="M12 20h9"></path>
                  <path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path>
                </svg>
                Editar Perfil
              </Button>
              
              <Button 
                variant="outline" 
                className="border-[--red-alert] text-[--red-alert] hover:bg-[--red-alert]/10"
                onClick={() => setShowConfirmLogoutDialog(true)}
              >
                <svg className="mr-2 h-4 w-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                  <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                  <polyline points="16 17 21 12 16 7"></polyline>
                  <line x1="21" y1="12" x2="9" y2="12"></line>
                </svg>
                Cerrar Sesión
              </Button>
            </div>
          </div>
          
          {/* Información del paciente */}
          <div className="mb-8">
            <h2 className="text-lg font-medium text-[--blue-main] mb-4">Datos del paciente</h2>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <Card className="shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-300">
                <CardContent className="p-5">
                  <h3 className="text-sm font-medium text-[--blue-main] mb-2">Información Personal</h3>
                  <div className="space-y-2">
                    <div className="flex items-center text-sm">
                      <svg className="mr-2 h-4 w-4 text-[--blue-main]" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                        <line x1="16" y1="2" x2="16" y2="6"></line>
                        <line x1="8" y1="2" x2="8" y2="6"></line>
                        <line x1="3" y1="10" x2="21" y2="10"></line>
                        <path d="M8 14h.01"></path>
                        <path d="M12 14h.01"></path>
                        <path d="M16 14h.01"></path>
                        <path d="M8 18h.01"></path>
                        <path d="M12 18h.01"></path>
                        <path d="M16 18h.01"></path>
                      </svg>
                      <span className="text-[--black-soft]">Edad: {patientData.age} años</span>
                    </div>
                    <div className="flex items-center text-sm">
                      <svg className="mr-2 h-4 w-4 text-[--blue-main]" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
                      </svg>
                      <span className="text-[--black-soft]">Teléfono: {patientData.phone}</span>
                    </div>
                    <div className="flex items-center text-sm">
                      <svg className="mr-2 h-4 w-4 text-[--blue-main]" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <rect x="2" y="4" width="20" height="16" rx="2"></rect>
                        <path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"></path>
                      </svg>
                      <span className="text-[--black-soft]">Email: {patientData.email}</span>
                    </div>
                    <div className="flex items-center text-sm">
                      <svg className="mr-2 h-4 w-4 text-[--blue-main]" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <path d="M18 6H6a2 2 0 0 0-2 2v3a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2Z"></path>
                        <path d="M8 12v8"></path>
                        <path d="M16 12v8"></path>
                        <path d="M12 2v4"></path>
                      </svg>
                      <span className="text-[--black-soft]">Seguro: {patientData.insurance}</span>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card className="shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-300">
                <CardContent className="p-5">
                  <h3 className="text-sm font-medium text-[--blue-main] mb-2">Dirección</h3>
                  <div className="flex items-start">
                    <svg className="mr-2 h-4 w-4 mt-0.5 text-[--blue-main]" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                      <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"></path>
                      <circle cx="12" cy="10" r="3"></circle>
                    </svg>
                    <span className="text-sm text-[--black-soft]">{patientData.address}</span>
                  </div>
                </CardContent>
              </Card>

              <Card className="shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-300">
                <CardContent className="p-5">
                  <h3 className="text-sm font-medium text-[--blue-main] mb-2">Datos Basales</h3>
                  <div className="space-y-2">
                    <div className="flex items-center text-sm">
                      <svg className="mr-2 h-4 w-4 text-[--blue-main]" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <path d="M2 20h20"></path>
                        <path d="M6 16V4"></path>
                        <path d="M10 16V10"></path>
                        <path d="M14 16v-6"></path>
                        <path d="M18 16V8"></path>
                      </svg>
                      <span className="text-[--black-soft]">Peso: {patientData.weight} kg</span>
                    </div>
                    <div className="flex items-center text-sm">
                      <svg className="mr-2 h-4 w-4 text-[--blue-main]" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <line x1="12" y1="2" x2="12" y2="6"></line>
                        <line x1="12" y1="18" x2="12" y2="22"></line>
                        <line x1="4.93" y1="4.93" x2="7.76" y2="7.76"></line>
                        <line x1="16.24" y1="16.24" x2="19.07" y2="19.07"></line>
                        <line x1="2" y1="12" x2="6" y2="12"></line>
                        <line x1="18" y1="12" x2="22" y2="12"></line>
                        <line x1="4.93" y1="19.07" x2="7.76" y2="16.24"></line>
                        <line x1="16.24" y1="7.76" x2="19.07" y2="4.93"></line>
                      </svg>
                      <span className="text-[--black-soft]">Altura: {patientData.height} cm</span>
                    </div>
                    <div className="flex items-center text-sm">
                      <svg className="mr-2 h-4 w-4 text-[--blue-main]" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <path d="M18 2a4 4 0 0 1 4 4v12a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V6a4 4 0 0 1 4-4h12Z"></path>
                        <path d="M12 9a1 1 0 0 0-1 1v4a1 1 0 0 0 1 1h.01a1 1 0 0 0 1-1v-4a1 1 0 0 0-1-1Z"></path>
                        <path d="M12 4a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1h.01a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1Z"></path>
                      </svg>
                      <span className="text-[--black-soft]">IMC: {(patientData.weight / ((patientData.height/100) * (patientData.height/100))).toFixed(1)} kg/m²</span>
                    </div>
                    <div className="flex items-center text-sm">
                      <svg className="mr-2 h-4 w-4 text-[--blue-main]" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <path d="M18 12H6.69a4 4 0 0 1-3.14-1.53L1.4 7.8a2 2 0 0 1 0-2.48l2.15-2.67A4 4 0 0 1 6.69 1H21a2 2 0 0 1 2 2v2a2 2 0 0 1-2 2h-.3a2 2 0 0 0-2 2v1c0 1.1.9 2 2 2Z"></path>
                        <path d="M1 14h4"></path>
                        <path d="M5 18H2"></path>
                        <path d="M5.3 18a1 1 0 0 1 .7 1.7L4.61 21"></path>
                        <path d="M13 14h1M17 14h1M21 14h1"></path>
                        <path d="M18 14v4"></path>
                        <path d="M9 18h12"></path>
                        <path d="M10 22H8"></path>
                        <path d="M14 22h-1"></path>
                        <path d="M18 22h-1"></path>
                        <path d="M22 22h-1"></path>
                      </svg>
                      <span className="text-[--black-soft]">Fumador: {patientData.isSmoker ? "Sí" : "No"}</span>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
          
          {/* Resumen de salud */}
          <div className="mb-8">
            <h2 className="text-lg font-medium text-[--blue-main] mb-4">Resumen de Salud</h2>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <Card className="shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-300">
                <CardContent className="p-5">
                  <h3 className="text-sm font-medium text-[--blue-main] mb-4">Diabetes</h3>
                  
                  <div className="space-y-6">
                    <div>
                      <div className="flex justify-between mb-1">
                        <div className="text-sm text-[--black-soft]">Glucosa en ayunas</div>
                        <div className="text-sm font-medium text-[--red-alert]">152 mg/dL</div>
                      </div>
                      <div className="w-full h-2 bg-[--red-alert]/10 rounded-full overflow-hidden">
                        <div className="h-full bg-[--red-alert]" style={{ width: '80%' }}></div>
                      </div>
                      <div className="flex justify-between mt-1 text-xs text-[--gray-medium]">
                        <span>70</span>
                        <span>140</span>
                        <span>200+</span>
                      </div>
                    </div>
                    
                    <div>
                      <div className="flex justify-between mb-1">
                        <div className="text-sm text-[--black-soft]">HbA1c</div>
                        <div className="text-sm font-medium text-[--yellow-warning]">7.3%</div>
                      </div>
                      <div className="w-full h-2 bg-[--yellow-warning]/10 rounded-full overflow-hidden">
                        <div className="h-full bg-[--yellow-warning]" style={{ width: '65%' }}></div>
                      </div>
                      <div className="flex justify-between mt-1 text-xs text-[--gray-medium]">
                        <span>5.7</span>
                        <span>7.0</span>
                        <span>8.0+</span>
                      </div>
                    </div>
                    
                    <div className="border-t pt-4">
                      <div className="flex items-start text-sm mb-2">
                        <svg className="text-[--green-success] mr-2 h-5 w-5 flex-shrink-0" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                          <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                          <polyline points="22 4 12 14.01 9 11.01"></polyline>
                        </svg>
                        <div className="text-[--black-soft]">
                          Reducción de 0.5% en HbA1c en los últimos 3 meses
                        </div>
                      </div>
                      
                      <div className="flex items-start text-sm">
                        <svg className="text-[--red-alert] mr-2 h-5 w-5 flex-shrink-0" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                          <path d="M10.29 3.86 1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                          <line x1="12" y1="9" x2="12" y2="13"></line>
                          <line x1="12" y1="17" x2="12.01" y2="17"></line>
                        </svg>
                        <div className="text-[--black-soft]">
                          3 episodios de hipoglucemia en el último mes
                        </div>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
              
              <Card className="shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-300">
                <CardContent className="p-5">
                  <h3 className="text-sm font-medium text-[--blue-main] mb-4">Hipertensión</h3>
                  
                  <div className="space-y-6">
                    <div>
                      <div className="flex justify-between mb-1">
                        <div className="text-sm text-[--black-soft]">Presión sistólica</div>
                        <div className="text-sm font-medium text-[--yellow-warning]">136 mmHg</div>
                      </div>
                      <div className="w-full h-2 bg-[--yellow-warning]/10 rounded-full overflow-hidden">
                        <div className="h-full bg-[--yellow-warning]" style={{ width: '60%' }}></div>
                      </div>
                      <div className="flex justify-between mt-1 text-xs text-[--gray-medium]">
                        <span>120</span>
                        <span>140</span>
                        <span>160+</span>
                      </div>
                    </div>
                    
                    <div>
                      <div className="flex justify-between mb-1">
                        <div className="text-sm text-[--black-soft]">Presión diastólica</div>
                        <div className="text-sm font-medium text-[--green-success]">82 mmHg</div>
                      </div>
                      <div className="w-full h-2 bg-[--green-success]/10 rounded-full overflow-hidden">
                        <div className="h-full bg-[--green-success]" style={{ width: '40%' }}></div>
                      </div>
                      <div className="flex justify-between mt-1 text-xs text-[--gray-medium]">
                        <span>80</span>
                        <span>90</span>
                        <span>100+</span>
                      </div>
                    </div>
                    
                    <div className="border-t pt-4">
                      <div className="flex items-start text-sm mb-2">
                        <svg className="text-[--green-success] mr-2 h-5 w-5 flex-shrink-0" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                          <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                          <polyline points="22 4 12 14.01 9 11.01"></polyline>
                        </svg>
                        <div className="text-[--black-soft]">
                          Reducción de 4 mmHg en presión sistólica en el último mes
                        </div>
                      </div>
                      
                      <div className="flex items-start text-sm">
                        <svg className="text-[--yellow-warning] mr-2 h-5 w-5 flex-shrink-0" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                          <path d="M10.29 3.86 1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                          <line x1="12" y1="9" x2="12" y2="13"></line>
                          <line x1="12" y1="17" x2="12.01" y2="17"></line>
                        </svg>
                        <div className="text-[--black-soft]">
                          Variabilidad elevada en lecturas matutinas
                        </div>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
          
          {/* Gráficos semanales */}
          <div className="mb-8">
            <h2 className="text-lg font-medium text-[--blue-main] mb-4">Gráficos semanales</h2>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <Card className="shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-300">
                <CardHeader className="pb-2">
                  <CardTitle className="text-sm text-[--black-soft] font-medium">Niveles de Glucosa</CardTitle>
                </CardHeader>
                <CardContent className="pt-0">
                  <div className="mt-4 h-[200px] w-full bg-[--blue-light]/20 rounded-lg flex items-center justify-center">
                    <p className="text-sm text-[--gray-medium]">Gráfico de glucosa en el tiempo</p>
                  </div>
                  <div className="flex justify-between items-center mt-4">
                    <div className="flex items-center gap-2">
                      <div className="w-3 h-3 rounded-full bg-[--blue-main]"></div>
                      <span className="text-xs text-[--gray-medium]">Glucosa</span>
                    </div>
                    <Select defaultValue="week">
                      <SelectTrigger className="w-[120px] h-8 text-xs">
                        <SelectValue placeholder="Periodo" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="day">Hoy</SelectItem>
                        <SelectItem value="week">Esta semana</SelectItem>
                        <SelectItem value="month">Este mes</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </CardContent>
              </Card>
              
              <Card className="shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-300">
                <CardHeader className="pb-2">
                  <CardTitle className="text-sm text-[--black-soft] font-medium">Presión Arterial</CardTitle>
                </CardHeader>
                <CardContent className="pt-0">
                  <div className="mt-4 h-[200px] w-full bg-[--blue-light]/20 rounded-lg flex items-center justify-center">
                    <p className="text-sm text-[--gray-medium]">Gráfico de presión arterial en el tiempo</p>
                  </div>
                  <div className="flex justify-between items-center mt-4">
                    <div className="flex items-center gap-4">
                      <div className="flex items-center gap-2">
                        <div className="w-3 h-3 rounded-full bg-[--red-alert]"></div>
                        <span className="text-xs text-[--gray-medium]">Sistólica</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <div className="w-3 h-3 rounded-full bg-[--blue-main]"></div>
                        <span className="text-xs text-[--gray-medium]">Diastólica</span>
                      </div>
                    </div>
                    <Select defaultValue="week">
                      <SelectTrigger className="w-[120px] h-8 text-xs">
                        <SelectValue placeholder="Periodo" />
                      </SelectTrigger>
                      <SelectContent>
                        <SelectItem value="day">Hoy</SelectItem>
                        <SelectItem value="week">Esta semana</SelectItem>
                        <SelectItem value="month">Este mes</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
          
          {/* Metas y tendencias */}
          <div className="mb-8">
            <h2 className="text-lg font-medium text-[--blue-main] mb-4">Metas y Tendencias</h2>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <Card className="shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-300">
                <CardContent className="p-5">
                  <h3 className="text-sm font-medium text-[--blue-main] mb-4">Metas de salud</h3>
                  
                  <div className="space-y-4">
                    <div>
                      <div className="flex items-center justify-between mb-1">
                        <span className="text-sm text-[--black-soft]">HbA1c &lt; 7.0%</span>
                        <span className="text-xs text-[--blue-main]">7.3% / 7.0%</span>
                      </div>
                      <Progress value={93} className="bg-[--blue-light] h-2" indicatorClassName="bg-[--blue-main]" />
                    </div>
                    
                    <div>
                      <div className="flex items-center justify-between mb-1">
                        <span className="text-sm text-[--black-soft]">Presión arterial &lt; 130/80 mmHg</span>
                        <span className="text-xs text-[--blue-main]">136/82 mmHg</span>
                      </div>
                      <Progress value={85} className="bg-[--blue-light] h-2" indicatorClassName="bg-[--blue-main]" />
                    </div>
                    
                    <div>
                      <div className="flex items-center justify-between mb-1">
                        <span className="text-sm text-[--black-soft]">IMC &lt; 25 kg/m²</span>
                        <span className="text-xs text-[--blue-main]">31.0 / 25.0</span>
                      </div>
                      <Progress value={50} className="bg-[--blue-light] h-2" indicatorClassName="bg-[--blue-main]" />
                    </div>
                    
                    <div>
                      <div className="flex items-center justify-between mb-1">
                        <span className="text-sm text-[--black-soft]">Actividad física (150 min/semana)</span>
                        <span className="text-xs text-[--blue-main]">90 / 150 min</span>
                      </div>
                      <Progress value={60} className="bg-[--blue-light] h-2" indicatorClassName="bg-[--blue-main]" />
                    </div>
                  </div>
                </CardContent>
              </Card>
              
              <Card className="shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-300">
                <CardContent className="p-5">
                  <h3 className="text-sm font-medium text-[--blue-main] mb-4">Tendencias</h3>
                  
                  <div className="space-y-4">
                    <div className="flex items-start">
                      <svg className="h-5 w-5 mr-2 text-[--green-success]" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <path d="m5 12 5 5 9-9"></path>
                      </svg>
                      <div>
                        <p className="text-sm text-[--black-soft]">Mejora consistente en niveles de glucosa</p>
                        <p className="text-xs text-[--gray-medium] mt-1">Reducción de 15% en picos postprandiales</p>
                      </div>
                    </div>
                    
                    <div className="flex items-start">
                      <svg className="h-5 w-5 mr-2 text-[--green-success]" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <path d="m5 12 5 5 9-9"></path>
                      </svg>
                      <div>
                        <p className="text-sm text-[--black-soft]">Mejor control de la presión arterial matutina</p>
                        <p className="text-xs text-[--gray-medium] mt-1">Reducción de 8 mmHg en PAS matutina</p>
                      </div>
                    </div>
                    
                    <div className="flex items-start">
                      <svg className="h-5 w-5 mr-2 text-[--yellow-warning]" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <path d="M12 9v4"></path>
                        <path d="M12 17h.01"></path>
                        <circle cx="12" cy="12" r="10"></circle>
                      </svg>
                      <div>
                        <p className="text-sm text-[--black-soft]">Variabilidad en glucosa nocturna</p>
                        <p className="text-xs text-[--gray-medium] mt-1">Episodios ocasionales de hipoglucemia (3-4 AM)</p>
                      </div>
                    </div>
                    
                    <div className="flex items-start">
                      <svg className="h-5 w-5 mr-2 text-[--red-alert]" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                        <path d="m18 6-12 12"></path>
                        <path d="m6 6 12 12"></path>
                      </svg>
                      <div>
                        <p className="text-sm text-[--black-soft]">Adherencia insuficiente a actividad física</p>
                        <p className="text-xs text-[--gray-medium] mt-1">Solo 60% del objetivo semanal alcanzado</p>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>

          {/* Recursos educativos - Solo sección de Videos */}
          <div className="mb-8">
            <h2 className="text-lg font-medium text-[--blue-main] mb-4">Educación y Recursos</h2>
            
            <Tabs defaultValue="videos" className="w-full">
              <TabsList className="w-full mb-4 text-xs sm:text-sm">
                <TabsTrigger value="videos" className="text-[--blue-main] px-1 md:px-3 w-full">Videos</TabsTrigger>
              </TabsList>
              
              <TabsContent value="videos">
                <div className="grid grid-cols-1 sm:grid-cols-2 gap-4 md:gap-6">
                  <Card className="shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-300">
                    <CardContent className="p-0">
                      <div className="w-full aspect-video bg-[--blue-light] rounded-t-lg flex items-center justify-center relative">
                        <div className="absolute inset-0 flex items-center justify-center">
                          <div className="h-16 w-16 rounded-full bg-white/80 flex items-center justify-center">
                            <svg className="h-8 w-8 text-[--blue-main]" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                              <polygon points="5 3 19 12 5 21 5 3"></polygon>
                            </svg>
                          </div>
                        </div>
                        <svg className="h-20 w-20 text-[--blue-main] opacity-20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1" strokeLinecap="round" strokeLinejoin="round">
                          <path d="m18.4 11.9-4.1 4.2-1.9-1.9-3 3"></path>
                          <path d="M18.3 5.9 13 11.3"></path>
                          <path d="m2.5 17.5 3.3-3.2 3 3L16 10"></path>
                          <path d="m2.5 11.7 3.3-3.2 3 3"></path>
                        </svg>
                      </div>
                      <div className="p-4">
                        <h3 className="font-medium text-[--black-soft] mb-2">Ejercicios para pacientes diabéticos</h3>
                        <p className="text-xs text-[--gray-medium] mb-3">Serie de ejercicios adaptados para personas con diabetes tipo 2.</p>
                        <div className="flex justify-between items-center">
                          <Badge className="bg-[--blue-light] text-[--blue-main]">15 min</Badge>
                          <Button size="sm" variant="link" className="text-[--blue-main] p-0 h-auto">Ver video</Button>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                  
                  <Card className="shadow-sm border border-gray-200 hover:shadow-md transition-shadow duration-300">
                    <CardContent className="p-0">
                      <div className="w-full aspect-video bg-[--blue-light] rounded-t-lg flex items-center justify-center relative">
                        <div className="absolute inset-0 flex items-center justify-center">
                          <div className="h-16 w-16 rounded-full bg-white/80 flex items-center justify-center">
                            <svg className="h-8 w-8 text-[--blue-main]" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                              <polygon points="5 3 19 12 5 21 5 3"></polygon>
                            </svg>
                          </div>
                        </div>
                        <svg className="h-20 w-20 text-[--blue-main] opacity-20" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1" strokeLinecap="round" strokeLinejoin="round">
                          <path d="M4.18 4.18C2.8 5.6 2 7.7 2 10c0 5.5 4.5 10 10 10 2.3 0 4.4-.8 6-2.18"></path>
                          <path d="m19.8 19.8 2-2"></path>
                          <path d="m2 2 20 20"></path>
                          <path d="M10.71 5.05A9 9 0 0 1 12 5c.97 0 1.92.15 2.83.43"></path>
                          <path d="M19.67 12.41c.2.46.33.96.33 1.49"></path>
                        </svg>
                      </div>
                      <div className="p-4">
                        <h3 className="font-medium text-[--black-soft] mb-2">Cómo medir correctamente la presión arterial</h3>
                        <p className="text-xs text-[--gray-medium] mb-3">Guía paso a paso para obtener lecturas precisas en casa.</p>
                        <div className="flex justify-between items-center">
                          <Badge className="bg-[--blue-light] text-[--blue-main]">8 min</Badge>
                          <Button size="sm" variant="link" className="text-[--blue-main] p-0 h-auto">Ver video</Button>
                        </div>
                      </div>
                    </CardContent>
                  </Card>
                </div>
              </TabsContent>
            </Tabs>
          </div>

          {/* Diálogo para editar perfil */}
          <Dialog open={showEditProfileDialog} onOpenChange={setShowEditProfileDialog}>
            <DialogContent className="max-w-[90vw] sm:max-w-[500px] border border-[--blue-light] shadow-lg overflow-y-auto max-h-[90vh]">
              <DialogHeader>
                <DialogTitle className="text-[--blue-main] text-xl">Editar Perfil</DialogTitle>
                <DialogDescription className="text-[--gray-medium]">
                  Actualiza tus datos personales y de contacto.
                </DialogDescription>
              </DialogHeader>
              <div className="grid gap-5 py-4">
                <div className="grid grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <Label htmlFor="name" className="text-[--black-soft]">Nombre</Label>
                    <Input 
                      id="name" 
                      value={patientData.name} 
                      onChange={(e) => setPatientData({...patientData, name: e.target.value})}
                      className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="lastname" className="text-[--black-soft]">Apellido</Label>
                    <Input 
                      id="lastname" 
                      value={patientData.lastName} 
                      onChange={(e) => setPatientData({...patientData, lastName: e.target.value})}
                      className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                    />
                  </div>
                </div>
                
                <div className="grid grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <Label htmlFor="age" className="text-[--black-soft]">Edad</Label>
                    <Input 
                      id="age" 
                      type="number" 
                      value={patientData.age.toString()} 
                      onChange={(e) => setPatientData({...patientData, age: parseInt(e.target.value) || 0})}
                      className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="phone" className="text-[--black-soft]">Teléfono</Label>
                    <Input 
                      id="phone" 
                      value={patientData.phone} 
                      onChange={(e) => setPatientData({...patientData, phone: e.target.value})}
                      className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                    />
                  </div>
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="email" className="text-[--black-soft]">Email</Label>
                  <Input 
                    id="email" 
                    type="email" 
                    value={patientData.email} 
                    onChange={(e) => setPatientData({...patientData, email: e.target.value})}
                    className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                  />
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="address" className="text-[--black-soft]">Dirección</Label>
                  <Input 
                    id="address" 
                    value={patientData.address} 
                    onChange={(e) => setPatientData({...patientData, address: e.target.value})}
                    className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                  />
                </div>
                
                <div className="grid grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <Label htmlFor="weight" className="text-[--black-soft]">Peso (kg)</Label>
                    <Input 
                      id="weight" 
                      type="number" 
                      value={patientData.weight.toString()} 
                      onChange={(e) => setPatientData({...patientData, weight: parseInt(e.target.value) || 0})}
                      className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                    />
                  </div>
                  <div className="space-y-2">
                    <Label htmlFor="height" className="text-[--black-soft]">Altura (cm)</Label>
                    <Input 
                      id="height" 
                      type="number" 
                      value={patientData.height.toString()} 
                      onChange={(e) => setPatientData({...patientData, height: parseInt(e.target.value) || 0})}
                      className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                    />
                  </div>
                </div>
                
                <div className="flex items-center space-x-2">
                  <Switch 
                    id="smoker" 
                    checked={patientData.isSmoker}
                    onCheckedChange={(checked) => setPatientData({...patientData, isSmoker: checked})}
                    className="data-[state=checked]:bg-[--blue-main]"
                  />
                  <Label htmlFor="smoker" className="text-[--black-soft]">Fumador</Label>
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="insurance" className="text-[--black-soft]">Seguro Médico</Label>
                  <Input 
                    id="insurance" 
                    value={patientData.insurance} 
                    onChange={(e) => setPatientData({...patientData, insurance: e.target.value})}
                    className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                  />
                </div>
              </div>
              <DialogFooter>
                <Button 
                  onClick={() => setShowEditProfileDialog(false)} 
                  variant="outline" 
                  className="border-[--gray-medium] text-[--gray-medium]"
                >
                  Cancelar
                </Button>
                <Button 
                  onClick={handleProfileSave} 
                  className="bg-[--blue-main] hover:bg-[--blue-main]/90"
                >
                  Guardar Cambios
                </Button>
              </DialogFooter>
            </DialogContent>
          </Dialog>
          
          {/* Diálogo de confirmación de cierre de sesión */}
          <Dialog open={showConfirmLogoutDialog} onOpenChange={setShowConfirmLogoutDialog}>
            <DialogContent className="max-w-[90vw] sm:max-w-[400px] border border-[--blue-light] shadow-lg">
              <DialogHeader>
                <DialogTitle className="text-[--blue-main] text-xl">Cerrar Sesión</DialogTitle>
                <DialogDescription className="text-[--gray-medium]">
                  ¿Estás seguro de que deseas cerrar tu sesión?
                </DialogDescription>
              </DialogHeader>
              <DialogFooter className="mt-4">
                <Button 
                  onClick={() => setShowConfirmLogoutDialog(false)} 
                  variant="outline" 
                  className="border-[--gray-medium] text-[--gray-medium]"
                >
                  Cancelar
                </Button>
                <Button 
                  onClick={() => {
                    setShowConfirmLogoutDialog(false);
                    // Aquí iría la lógica para cerrar sesión
                  }} 
                  className="bg-[--red-alert] hover:bg-[--red-alert]/90"
                >
                  Cerrar Sesión
                </Button>
              </DialogFooter>
            </DialogContent>
          </Dialog>
          
          {/* Diálogo para añadir medicamento */}
          <Dialog open={showAddMedicationDialog} onOpenChange={setShowAddMedicationDialog}>
            <DialogContent className="max-w-[90vw] sm:max-w-[500px] border border-[--blue-light] shadow-lg">
              <DialogHeader>
                <DialogTitle className="text-[--blue-main] text-xl">Añadir Medicamento</DialogTitle>
                <DialogDescription className="text-[--gray-medium]">
                  Completa la información del nuevo medicamento.
                </DialogDescription>
              </DialogHeader>
              <div className="grid gap-5 py-4">
                <div className="space-y-2">
                  <Label htmlFor="med-name" className="text-[--black-soft]">Nombre del medicamento</Label>
                  <Input 
                    id="med-name" 
                    value={newMedication.name} 
                    onChange={(e) => setNewMedication({...newMedication, name: e.target.value})}
                    className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                  />
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="med-dosage" className="text-[--black-soft]">Dosificación</Label>
                  <Input 
                    id="med-dosage" 
                    placeholder="Ej: 50mg - 1 pastilla" 
                    value={newMedication.dosage} 
                    onChange={(e) => setNewMedication({...newMedication, dosage: e.target.value})}
                    className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                  />
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="med-frequency" className="text-[--black-soft]">Frecuencia</Label>
                  <Input 
                    id="med-frequency" 
                    placeholder="Ej: 2 veces al día" 
                    value={newMedication.frequency} 
                    onChange={(e) => setNewMedication({...newMedication, frequency: e.target.value})}
                    className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                  />
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="med-category" className="text-[--black-soft]">Categoría</Label>
                  <Select 
                    value={newMedication.category} 
                    onValueChange={(value: any) => setNewMedication({...newMedication, category: value})}
                  >
                    <SelectTrigger id="med-category" className="border-[--blue-light] focus:ring-[--blue-main]">
                      <SelectValue placeholder="Selecciona una categoría" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="diabetes">Diabetes</SelectItem>
                      <SelectItem value="hipertension">Hipertensión</SelectItem>
                      <SelectItem value="otro">Otro</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                
                <div className="space-y-2">
                  <Label htmlFor="med-next-dose" className="text-[--black-soft]">Próxima dosis</Label>
                  <Input 
                    id="med-next-dose" 
                    placeholder="Ej: Hoy 20:00" 
                    value={newMedication.nextDose} 
                    onChange={(e) => setNewMedication({...newMedication, nextDose: e.target.value})}
                    className="border-[--blue-light] focus-visible:ring-[--blue-main]" 
                  />
                </div>
              </div>
              <DialogFooter>
                <Button 
                  onClick={() => setShowAddMedicationDialog(false)} 
                  variant="outline" 
                  className="border-[--gray-medium] text-[--gray-medium]"
                >
                  Cancelar
                </Button>
                <Button 
                  onClick={handleAddMedication} 
                  className="bg-[--blue-main] hover:bg-[--blue-main]/90"
                >
                  Añadir Medicamento
                </Button>
              </DialogFooter>
            </DialogContent>
          </Dialog>
        </main>
      </div>
    </div>
  );
}